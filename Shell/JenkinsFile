pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        AWS_REGION = 'ap-south-1' // Update to your EKS cluster region
        KUBE_CONFIG = credentials('eks-kubeconfig') // Jenkins secret for kubeconfig
        AWS_IAM_ROLE = 'arn:aws:iam::637423357784:role/eks-jenkins-role'
    }
    stages {
        stage ("Clean workspace") {
            steps {
                cleanWs()
            }
        }
        stage ("Git checkout") {
            steps {
                git branch: 'main', url: 'https://github.com/yeshwanthlm/background-remover-python-app.git'
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=background-remover-python-app \
                    -Dsonar.projectKey=background-remover-python-app '''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('OWASP FS Scan') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage ("Trivy File Scan") {
            steps {
                sh "trivy fs . > trivy.txt"
            }
        }
        stage ("Build Docker Image") {
            steps {
                sh "docker build -t background-remover-python-app ."
            }
        }
        stage ("Tag & Push to DockerHub") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker') {
                        sh "docker tag background-remover-python-app akhilmittal510/background-remover-python-app:latest"
                        sh "docker push akhilmittal510/background-remover-python-app:latest"
                    }
                }
            }
        }
        stage('Docker Scout Image') {
            steps {
                script {
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                       sh 'docker-scout quickview akhilmittal510/background-remover-python-app:latest'
                       sh 'docker-scout cves akhilmittal510/background-remover-python-app:latest'
                       sh 'docker-scout recommendations akhilmittal510/background-remover-python-app:latest'
                   }
                }
            }
        }
        stage("Deploy to EKS") {
            steps {
                script {
                    withCredentials([file(credentialsId: 'eks-kubeconfig', variable: 'KUBECONFIG')]) {
                        // Your kubectl or Helm commands go here
                        sh 'kubectl get nodes'  // Test access
                        
                        // Example: Helm deploy
                        sh '''
                        helm repo add my-python-repo https://am2308.github.io/Helm-Package
                        helm install myapp-python my-python-repo/myapp-python
                        '''
                    }
                }
            }
        }
    }
}


helm install -n monitoring --create-namespace \
  --set logs.enabled=true \
  --set logzio-logs-collector.enabled=true \
  --set logzio-fluentd.enabled=false \
  --set logzio-logs-collector.secrets.logzioLogsToken='GJFVmiqjHguqayYolbaiLgwLiFJuoTHA' \
  --set logzio-logs-collector.secrets.logzioRegion='uk' \
  --set logzio-logs-collector.secrets.env_id='demo' \
  --set metricsOrTraces.enabled=true \
  --set logzio-k8s-telemetry.metrics.enabled=true \
  --set logzio-k8s-telemetry.secrets.MetricsToken='BhdOLsWSgtwKBmqbBRSkbkXauPHVdxND' \
  --set logzio-k8s-telemetry.secrets.ListenerHost='https://listener-uk.logz.io:8053' \
  --set logzio-k8s-telemetry.secrets.p8s_logzio_name='demo' \
  --set logzio-k8s-telemetry.enableMetricsFilter.eks=true \
  --set logzio-k8s-telemetry.k8sObjectsConfig.enabled=true \
  --set logzio-k8s-telemetry.secrets.k8sObjectsLogsToken='GJFVmiqjHguqayYolbaiLgwLiFJuoTHA' \
  --set logzio-k8s-telemetry.secrets.LogzioRegion='uk' \
  --set logzio-k8s-telemetry.traces.enabled=true \
  --set logzio-k8s-telemetry.secrets.TracesToken='hkItkiXtqYNTBydlvPqpZkmWedgTFLjr' \
  --set logzio-k8s-telemetry.secrets.LogzioRegion='uk' \
  --set logzio-k8s-telemetry.spm.enabled=true \
  --set logzio-k8s-telemetry.secrets.env_id='demo' \
  --set logzio-k8s-telemetry.secrets.SpmToken='BhdOLsWSgtwKBmqbBRSkbkXauPHVdxND' \
  --set logzio-k8s-telemetry.serviceGraph.enabled=true \
  --set securityReport.enabled=true \
  --set logzio-trivy.env_id='demo' \
  --set logzio-trivy.secrets.logzioShippingToken='GJFVmiqjHguqayYolbaiLgwLiFJuoTHA' \
  --set logzio-trivy.secrets.logzioListener='listener-uk.logz.io' \
  --set deployEvents.enabled=true \
  --set logzio-k8s-events.secrets.env_id='demo' \
  --set logzio-k8s-events.secrets.logzioShippingToken='GJFVmiqjHguqayYolbaiLgwLiFJuoTHA' \
  --set logzio-k8s-events.secrets.logzioListener='listener-uk.logz.io' \
logzio-monitoring logzio-helm/logzio-monitoring

Click to expand (NaN lines)