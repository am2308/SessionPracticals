{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "DataScanningEnabled": {
      "Fn::Equals": [
        {
          "Ref": "DataScanning"
        },
        "Enabled"
      ]
    },
    "LightsailScanningEnabled": {
      "Fn::Equals": [
        {
          "Ref": "LightsailScanning"
        },
        "Enabled"
      ]
    }
  },
  "Description": "Wiz AWS standard deployment",
  "Outputs": {
    "ExternalID": {
      "Description": "Your External ID",
      "Value": {
        "Ref": "ExternalId"
      }
    },
    "RoleARNID": {
      "Description": "Your Role ARN ID",
      "Value": {
        "Fn::GetAtt": [
          "Role",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "DataScanning": {
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Disabled",
      "Description": "Enable data scanning",
      "Type": "String"
    },
    "ExternalId": {
      "AllowedPattern": "\\S{8}-\\S{4}-\\S{4}-\\S{4}-\\S{12}",
      "Description": "Enter the External ID of the Wiz connector. This is a nonce that will be used by our service to assume the role in your account.",
      "Type": "String"
    },
    "LightsailScanning": {
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Disabled",
      "Description": "Enable lightsail scanning",
      "Type": "String"
    },
    "RoleARN": {
      "AllowedPattern": "arn:aws(-us-gov|-cn)?:iam::[0-9]+:role/.*",
      "Description": "Enter the AWS Trust Policy Role ARN for your Wiz data center. You can retrieve it from User Settings, Tenant in the Wiz portal.",
      "Type": "String"
    },
    "WizRoleName": {
      "Default": "WizAccess-Role",
      "Description": "Enter the IAM role name that will be created in your AWS account, the default is WizAccess-Role",
      "Type": "String"
    }
  },
  "Resources": {
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Ref": "ExternalId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Ref": "RoleARN"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
          }
        ],
        "RoleName": {
          "Ref": "WizRoleName"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "WizDataScanningPolicy": {
      "Condition": "DataScanningEnabled",
      "Properties": {
        "ManagedPolicyName": "WizDataScanningPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "redshift:DeleteClusterSnapshot",
                "redshift:AuthorizeSnapshotAccess",
                "redshift:RevokeSnapshotAccess"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "redshift:CreateTags"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:redshift:*:*:snapshot:*/*"
              }
            },
            {
              "Action": [
                "redshift:DescribeClusterSnapshots",
                "redshift:DescribeClusters"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "redshift:CreateClusterSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DescribeDBClusters",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBInstances",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBSubnetGroups",
                "rds:ListTagsForResource",
                "rds:AddTagsToResource"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DeleteDBClusterSnapshot",
                "rds:ModifyDBClusterSnapshotAttribute"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:rds:*:*:cluster-snapshot:wiz-autogen-*"
              }
            },
            {
              "Action": [
                "rds:CopyDBClusterSnapshot",
                "rds:CopyDBSnapshot"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DeleteDBSnapshot",
                "rds:ModifyDBSnapshotAttribute"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:rds:*:*:snapshot:wiz-autogen-*"
              }
            },
            {
              "Action": [
                "rds:CreateDBClusterSnapshot",
                "rds:CreateDBSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "rds:req-tag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ReEncrypt*"
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": "rds.*.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:Scan",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::ManagedPolicy"
    },
    "WizFullPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:GetCertificate",
                "airflow:GetEnvironment",
                "amplify:GetApp",
                "amplify:GetBackendEnvironment",
                "amplify:ListApps",
                "amplify:ListBackendEnvironments",
                "amplify:ListBranches",
                "amplify:ListDomainAssociations",
                "amplify:ListTagsForResource",
                "amplifybackend:GetBackend",
                "aoss:ListCollections",
                "aoss:ListSecurityPolicies",
                "aoss:BatchGetCollection",
                "aoss:GetSecurityPolicy",
                "aoss:ListTagsForResource",
                "apigateway:GET",
                "appsync:GetApiAssociation",
                "appstream:DescribeStacks",
                "appstream:ListAssociatedFleets",
                "appstream:DescribeFleets",
                "appstream:ListTagsForResource",
                "appstream:DescribeUserStackAssociations",
                "backup:DescribeGlobalSettings",
                "backup:GetBackupPlan",
                "backup:GetBackupVaultAccessPolicy",
                "backup:GetBackupVaultNotifications",
                "backup:GetBackupSelection",
                "backup:ListBackupVaults",
                "backup:ListTags",
                "backup:ListBackupPlans",
                "backup:ListBackupSelections",
                "bedrock:GetCustomModel",
                "bedrock:GetModelInvocationLoggingConfiguration",
                "bedrock:ListCustomModels",
                "bedrock:ListTagsForResource",
                "cloudsearch:DescribeAvailabilityOptions",
                "cloudtrail:GetInsightSelectors",
                "cloudtrail:ListTrails",
                "codebuild:BatchGetProjects",
                "codebuild:GetResourcePolicy",
                "codebuild:ListProjects",
                "cognito-identity:DescribeIdentityPool",
                "connect:ListInstances",
                "connect:ListInstanceAttributes",
                "connect:ListInstanceStorageConfigs",
                "connect:ListSecurityKeys",
                "connect:ListLexBots",
                "connect:ListLambdaFunctions",
                "connect:ListApprovedOrigins",
                "connect:ListIntegrationAssociations",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:ListExports",
                "databrew:DescribeDataset",
                "databrew:ListJobs",
                "databrew:ListProjects",
                "databrew:DescribeProject",
                "databrew:DescribeRecipe",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:GetImageBlockPublicAccessState",
                "ec2:GetSnapshotBlockPublicAccessState",
                "ec2:SearchTransitGatewayRoutes",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRegistryPolicy",
                "ecr:DescribeRegistry",
                "ecr-public:ListTagsForResource",
                "eks:ListTagsForResource",
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticmapreduce:GetAutoTerminationPolicy",
                "elasticmapreduce:GetManagedScalingPolicy",
                "emr-serverless:GetApplication",
                "emr-serverless:ListApplications",
                "emr-serverless:ListJobRuns",
                "ssm:GetDocument",
                "ssm:GetServiceSetting",
                "ssm:GetParameters",
                "glacier:GetDataRetrievalPolicy",
                "glacier:GetVaultLock",
                "glue:GetConnection",
                "glue:GetSecurityConfiguration",
                "glue:GetTags",
                "health:DescribeAffectedAccountsForOrganization",
                "health:DescribeAffectedEntities",
                "health:DescribeAffectedEntitiesForOrganization",
                "health:DescribeEntityAggregates",
                "health:DescribeEventAggregates",
                "health:DescribeEventDetails",
                "health:DescribeEventDetailsForOrganization",
                "health:DescribeEventTypes",
                "health:DescribeEvents",
                "health:DescribeEventsForOrganization",
                "health:DescribeHealthServiceStatusForOrganization",
                "kafka:ListClusters",
                "kendra:DescribeDataSource",
                "kendra:DescribeIndex",
                "kendra:ListDataSources",
                "kendra:ListIndices",
                "kendra:ListTagsForResource",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForStream",
                "kinesisvideo:GetDataEndpoint",
                "kms:GetKeyRotationStatus",
                "kms:ListResourceTags",
                "lambda:GetFunction",
                "lambda:GetLayerVersion",
                "lightsail:GetRelationalDatabases",
                "lightsail:GetContainerServices",
                "lightsail:GetBuckets",
                "logs:ListTagsForResource",
                "profile:GetDomain",
                "profile:ListDomains",
                "profile:ListIntegrations",
                "s3:GetIntelligentTieringConfiguration",
                "s3:GetMultiRegionAccessPointPolicy",
                "s3:ListMultiRegionAccessPoints",
                "ses:DescribeActiveReceiptRuleSet",
                "ses:GetAccount",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetDedicatedIps",
                "ses:GetEmailIdentity",
                "ses:ListConfigurationSets",
                "ses:ListDedicatedIpPools",
                "ses:ListReceiptFilters",
                "voiceid:DescribeDomain",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetWebACLForResource",
                "wafv2:GetIPSet",
                "wafv2:GetRuleGroup",
                "wisdom:GetAssistant",
                "macie2:ListFindings",
                "macie2:GetFindings",
                "identitystore:List*",
                "identitystore:Describe*",
                "sso-directory:Describe*",
                "sso-directory:ListMembersInGroup",
                "cloudwatch:GetMetricStatistics",
                "redshift-serverless:GetNamespace",
                "redshift-serverless:ListTagsForResource",
                "redshift-serverless:ListWorkgroups",
                "timestream:DescribeEndpoints",
                "timestream:DescribeBatchLoadTask",
                "timestream:DescribeScheduledQuery",
                "timestream:ListBatchLoadTasks",
                "timestream:ListDatabases",
                "timestream:ListScheduledQueries",
                "timestream:ListTables",
                "timestream:ListTagsForResource"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cassandra:Select",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema/table/keyspaces"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema/table/tables"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema/table/columns"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema_mcs/table/keyspaces"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema_mcs/table/tables"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema_mcs/table/columns"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_schema_mcs/table/tags"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:cassandra:*:*:/keyspace/system_multiregion_info/table/tables"
                }
              ],
              "Sid": "WizReadOnlyAccessToAmazonKeyspacesMetadata"
            },
            {
              "Action": [
                "ecr:BatchGetImage",
                "ecr:DescribeImages",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:ListTagsForResource",
                "ecr:GetRegistryPolicy",
                "ecr-public:DescribeImages",
                "ecr-public:ListTagsForResource",
                "ecr-public:GetAuthorizationToken"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CopySnapshot",
                "ec2:CreateSnapshot",
                "kms:CreateKey",
                "kms:DescribeKey",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:DescribeSnapshots"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CreateTags"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": [
                    "CreateSnapshot",
                    "CopySnapshot"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:*::snapshot/*"
              },
              "Sid": "AllowWizToCreateTagsOnCreatedAndCopiedSnapshots"
            },
            {
              "Action": "kms:CreateAlias",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:${AWS::Partition}:kms:*:*:alias/wizKey"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:kms:*:*:key/*"
                }
              ]
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ReEncryptFrom"
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": "ec2.*.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:GetKeyPolicy",
                "kms:PutKeyPolicy"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/wiz": "auto-gen-cmk"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:DeleteSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:ModifySnapshotAttribute"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/wiz": [
                    "auto-gen-snapshot",
                    "shareable-resource"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CreateVolume"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/wiz": "auto-gen-volume"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowWizToCreateTaggedVolumes"
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": "CreateVolume"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowWizToCreateTagsOnCreatedVolumes"
            },
            {
              "Action": [
                "ec2:DeleteVolume"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/wiz": "auto-gen-volume"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowWizToDeleteTaggedVolumes"
            },
            {
              "Action": [
                "ec2:DescribeVolumes",
                "ec2:DescribeAvailabilityZones"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "WizComplementaryPermissionsForTemporaryVolumes"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetBucketLocation",
                "s3:GetObjectTagging",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*terraform*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*tfstate*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*tf?state*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*cloudtrail*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::elasticbeanstalk-*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::amplify-*-deployment/*"
                }
              ],
              "Sid": "WizAccessS3"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WizFullPolicy",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "WizLightsailScanningPolicy": {
      "Condition": "LightsailScanningEnabled",
      "Properties": {
        "ManagedPolicyName": "WizLightsailScanningPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": "lightsail.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/aws-service-role/lightsail.amazonaws.com/AWSServiceRoleForLightsail*"
            },
            {
              "Action": [
                "iam:PutRolePolicy"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:iam::*:role/aws-service-role/lightsail.amazonaws.com/AWSServiceRoleForLightsail*"
              ]
            },
            {
              "Action": [
                "lightsail:CreateDiskSnapshot",
                "lightsail:TagResource"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "lightsail:DeleteDiskSnapshot",
                "lightsail:ExportSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "lightsail:GetDiskSnapshot",
                "lightsail:GetDiskSnapshots",
                "lightsail:GetExportSnapshotRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:ModifySnapshotAttribute",
                "ec2:DeleteSnapshot"
              ],
              "Condition": {
                "StringLike": {
                  "ec2:ParentVolume": "arn:aws:ec2:*:*:volume/vol-ffffffff"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::ManagedPolicy"
    }
  }
}